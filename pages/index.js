import {ethers} from 'ethers'
import {useEffect,useState} from 'react'
import axios from 'axios'
import Web3Modal from "web3modal"

import {
  nftaddress,nftmarketaddress
}from '../config'

import NFT from '../artifacts/contracts/NFT.sol/NFT.json'
import Market from '../artifacts/contracts/NFTMarket.sol/NFTMarket.json'

export default function Home(){
  const [nfts,setNfts]=useState([])
  const [loadingState,setLoadingState] = useState('not-loaded')

  useEffect(() => {
    loadNFTs()

  }, [])

  async function loadNFTs(){
    const provider = new ethers.providers.JsonRpcProvider()
    const tokenContract = new ethers.Contract(nftaddress, NFT.abi , provider)
    const marketContract = new ethers.Contract(nftmarketaddress, Market.abi, provider)
    const data = await marketContract.fetchMarketItems()

    const items = await Promise.all(data.map(async i =>{
      const tokenURI=await tokenContract.tokenURI(i.tokenId)
      const meta = await axios.get(tokenURI)
      let price=ethers.utils.formatUnits(i.price.toString(), 'ether')
      let item = {
        price,
        tokenId: i.tokenId.toNumber(),
        seller: i.seller,
        owner: i.owner,
        image: meta.data.image,
        name: meta.data.name,
        description: meta.data.description
      }
      return item
    }))
    setNfts(items)
    setLoadingState('loaded') 
  }

  async function buyNFT(nft) {
    const web3Modal = new Web3Modal()
    const connection = await web3Modal.connect()
    const provider=new ethers.providers.Web3Provider(connection)
    const signer=provider.getSigner()
    const contract=new ethers.Contract(nftmarketaddress,Market.abi,signer)
    const price=ethers.utils.parseUnits(nft.price.toString(),'ether')
    const transaction= await contract.createMarketSale(nftaddress,nft.tokenId,{
      value:price 
    })
    await transaction.wait()
    loadNFTs()
  }


  if (loadingState === "loaded" && !nfts.length) return (
      <h1 className= "px-20 py-10 text-3xl">There are no items in the NFT Marketplace</h1>
    ) 


    return (
      <div className={styles.container}>
        <Head>
            
          <title>NFT Metaverse Market</title>
          <meta name="description" content="generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
  
  
        <div className="flex justify-center">
        <div className="px-4" style={{maxWidth: '1600px'}}>
          <div className="grid grid-cols-1 dm:grid-cols-2 lg:grid-cols-4 gap-4 pt-4">
            {
              nfts.map((nft,i) => (
                <div key={i} className="border shadow rounded-xl overflow-hidden">
                  <img src={nft.image} />
                  <div className="p-4">
                    <p style={{ height: '64px'}} className="text-2xl font-semibold">{nft.name}</p>
                    <div style={{height: '70px',overflow:'hidden'}}>
                      <p className="text-gray-400">{nft.description}</p>
                    </div>
                  </div>
                  <div className="p-4 bg-black">
                    <button className="w-full bg-pink-500 text-white font-bold py-2 px-12 rounded"
                    onClick={() => buyNFT(nft)}>Buy</button>
                </div>
                </div>
              )) 
            }
          </div>
        </div> 
      </div>
    
  
  
  
  
        <main className={styles.main}>
            <span className={styles.logo}>
              <Image src="/ineuron-logo.png" alt="" width={100} height={30} />
            </span>
          <div class="header">
          
          </div>
          <h1 className={styles.title}>
           
            Welcome to the NFT Metaverse!
          </h1>
  
          <p className={styles.description}>
            A Decentralised Application built on the ethereum blockchain to trade Non Fungible Tokens!
            
          </p>
  
  
          <div className={styles.grid}>
            <a href="https://nextjs.org/docs" className={styles.card}>
              <h2>Documentation &rarr;</h2>
              <p>Find in-depth information about Next.js features and API.</p>
            </a>
  
            <a href="https://nextjs.org/learn" className={styles.card}>
              <h2>Learn &rarr;</h2>
              <p>Learn about Next.js in an interactive course with quizzes!</p>
            </a>
  
            <a
              href="https://github.com/vercel/next.js/tree/canary/examples"
              className={styles.card}
            >
              <h2>Examples &rarr;</h2>
              <p>Discover and deploy boilerplate example Next.js projects.</p>
            </a>
  
            <a
              href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              className={styles.card}
            >
              <h2>Deploy &rarr;</h2>
              <p>
                Instantly deploy your Next.js site to a public URL with Vercel.
              </p>
            </a>
          </div>
        </main>
  
      </div>
    )
  }